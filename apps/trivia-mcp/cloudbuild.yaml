# Cloud Build configuration for trivia-mcp
# Optimized for TurboRepo monorepo structure

steps:
  # Step 1: Check if trivia-mcp has changes (optimization for monorepo)
  - name: 'gcr.io/cloud-builders/git'
    id: 'check-changes'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Checking for changes in apps/trivia-mcp..."
        if [ "$_FORCE_BUILD" = "true" ]; then
          echo "Force build enabled, proceeding..."
          exit 0
        fi
        
        # Check if this is the first build or if there are changes
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          if git diff --name-only HEAD~1 HEAD | grep -E "(apps/trivia-mcp/|package\.json|package-lock\.json|turbo\.json)" > /dev/null; then
            echo "Changes detected in trivia-mcp or root dependencies"
            echo "BUILD_REQUIRED=true" > /workspace/build_status
          else
            echo "No relevant changes detected, skipping build"
            echo "BUILD_REQUIRED=false" > /workspace/build_status
            exit 0
          fi
        else
          echo "First build or no previous commit, proceeding..."
          echo "BUILD_REQUIRED=true" > /workspace/build_status
        fi

  # Step 2: Build Docker image using our optimized Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: [
      'build',
      '-f', 'apps/trivia-mcp/Dockerfile',
      '-t', '${_REGISTRY_URL}/${_SERVICE_NAME}:${BUILD_ID}',
      '-t', '${_REGISTRY_URL}/${_SERVICE_NAME}:latest',
      '-t', '${_REGISTRY_URL}/${_SERVICE_NAME}:${BRANCH_NAME}-${SHORT_SHA}',
      '--cache-from', '${_REGISTRY_URL}/${_SERVICE_NAME}:latest',
      '.'
    ]
    waitFor: ['check-changes']

  # Step 3: Run tests (optional - uncomment if you have tests)
  # - name: 'gcr.io/cloud-builders/docker'
  #   id: 'run-tests'
  #   args: [
  #     'run', '--rm',
  #     '${_REGISTRY_URL}/${_SERVICE_NAME}:${BUILD_ID}',
  #     'npm', 'test'
  #   ]
  #   waitFor: ['build-image']

  # Step 4: Push image to registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: ['push', '--all-tags', '${_REGISTRY_URL}/${_SERVICE_NAME}']
    waitFor: ['build-image']

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-cloud-run'
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', '${_REGISTRY_URL}/${_SERVICE_NAME}:${BUILD_ID}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '${_MEMORY}',
      '--cpu', '${_CPU}',
      '--concurrency', '${_CONCURRENCY}',
      '--max-instances', '${_MAX_INSTANCES}',
      '--min-instances', '${_MIN_INSTANCES}',
      '--set-env-vars', 'NODE_ENV=production',
      '--tag', '${BRANCH_NAME}-${SHORT_SHA}',
      '--no-traffic'  # Don't route traffic to new revision immediately
    ]
    waitFor: ['push-image']

  # Step 6: Route traffic to new revision (only for main branch)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'route-traffic'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "${BRANCH_NAME}" = "main" ] || [ "${_DEPLOY_ENV}" = "production" ]; then
          echo "Routing 100% traffic to new revision..."
          gcloud run services update-traffic ${_SERVICE_NAME} \
            --to-latest \
            --region ${_REGION}
        else
          echo "Branch deployment - traffic routing skipped"
          echo "Preview URL: https://${BRANCH_NAME}-${SHORT_SHA}---${_SERVICE_NAME}-${_REGION}.run.app"
        fi
    waitFor: ['deploy-cloud-run']

# Configuration options
options:
  # Use faster machine for builds
  machineType: 'E2_HIGHCPU_8'
  
  # Enhanced logging
  logging: CLOUD_LOGGING_ONLY
  
  # Use larger disk for node_modules
  diskSizeGb: 100
  
  # Enable substitution for environment variables
  substitution_option: 'ALLOW_LOOSE'

# Images to be pushed to registry
images:
  - '${_REGISTRY_URL}/${_SERVICE_NAME}:${BUILD_ID}'
  - '${_REGISTRY_URL}/${_SERVICE_NAME}:latest'
  - '${_REGISTRY_URL}/${_SERVICE_NAME}:${BRANCH_NAME}-${SHORT_SHA}'

# Substitution variables (can be overridden in trigger)
substitutions:
  # Service configuration
  _SERVICE_NAME: 'trivia-mcp'
  _REGION: 'us-central1'
  _REGISTRY_URL: 'gcr.io/${PROJECT_ID}'
  
  # Resource allocation
  _MEMORY: '512Mi'
  _CPU: '1'
  _CONCURRENCY: '100'
  _MAX_INSTANCES: '2'
  _MIN_INSTANCES: '0'
  
  # Build options
  _FORCE_BUILD: 'false'
  _DEPLOY_ENV: 'staging'

# Build timeout (default is 10 minutes, extended for potential slow builds)
timeout: 1200s

# Build tags for filtering and organization
tags:
  - 'trivia-mcp'
  - 'turbo-repo'
  - 'node-22'
  - '${BRANCH_NAME}' 