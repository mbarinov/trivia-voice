name: Deploy Trivia MCP to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/trivia-mcp/**'
      - 'packages/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/deploy-trivia-mcp.yml'
  workflow_dispatch: # Allow manual trigger

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: trivia-mcp
  REGION: us-central1
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/trivia-mcp

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    # Add "id-token" with the intended permissions.
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build trivia-mcp
      run: npx turbo run build --filter=trivia-mcp

    - name: Run tests
      run: npx turbo run test --filter=trivia-mcp

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/trivia-mcp/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
        flags: |
          --platform=managed
          --allow-unauthenticated
          --port=8080
          --memory=512Mi
          --cpu=1
          --min-instances=0
          --max-instances=10
          --concurrency=80

    - name: Show deployment URL
      run: echo "Deployed to ${{ steps.deploy.outputs.url }}"

    - name: Verify deployment
      run: |
        echo "Testing deployment..."
        curl -f "${{ steps.deploy.outputs.url }}/stream" || echo "Service is responding (expected 400 for GET request)"

    - name: Cleanup old images
      run: |
        # Keep only the 5 most recent images
        gcloud container images list-tags ${{ env.IMAGE_NAME }} \
          --limit=10 \
          --sort-by=~TIMESTAMP \
          --format="get(digest)" | tail -n +6 | \
          xargs -r -I {} gcloud container images delete ${{ env.IMAGE_NAME }}@{} --quiet || true 